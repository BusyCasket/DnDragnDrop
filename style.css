/*
General
-------------------------------
*/

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: "Montserrat", sans-serif;
  font-weight: 500;
}

/*
Variables
-------------------------------
*/

:root {
  --spacing: 2rem;
  --radius: 1rem;
}

/*
Layout
-------------------------------
*/

.wrapper {
  display: grid;
  grid-template-rows: auto;
  grid-template-columns: repeat(3, 1fr);
  grid-template-areas:
    "Header Header Header"
    "Dice Dice .........."
    "Area Area Protocol";
  column-gap: var(--spacing);
  row-gap: var(--spacing);
  align-content: start;
  align-items: start;
  width: 100%;
  min-height: 100vh;
  padding: var(--spacing);
  background-image: url(./img/wooden_table.jpg);
  background-size: cover;
  background-attachment: fixed;
}

header {
  grid-area: Header;
  font-size: 7vw;
  font-weight: 900;
  color: #fff;
}

.diceArea {
  grid-area: Area;
}

.diceArea > :nth-child(n + 2),
#protocol > :nth-child(n + 2) {
  margin-top: var(--spacing);
}

.resultArea {
  grid-area: Protocol;
}

/*
Dice Area
-------------------------------
*/

#dice {
  grid-area: Dice;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  min-height: 100px;
}

/*
dice
*/

.dice {
  display: grid;
  grid-template-rows: repeat(3, 1fr);
  grid-template-areas:
    "Eyes Eyes"
    "Eyes Eyes"
    "Left Right";
  position: relative;
  width: 70px;
  height: 70px;
  margin: 1rem 1rem 0 0;
  background-color: #eef;
  border-radius: 10px;
  box-shadow: 0 0 5px rgba(65, 48, 48, 1), 5px 5px 20px rgba(0, 0, 0, 1);
  cursor: grab;
  background-color: #cc3399;
  overflow: hidden;
}

.chosen {
  font-weight: 800;
  border: 4px solid rgb(60, 150, 60);
}

.pending {
  opacity: 0.5;
}

.number,
.boxLabel,
.delete {
  display: flex;
  justify-content: center;
  align-items: center;
}

.delete {
  position: absolute;
  width: 15px;
  height: 15px;
  top: 5px;
  right: 5px;
  background-color: #898989;
  border-radius: 50%;
  border: 1px solid #000;
  opacity: 0;
  cursor: pointer;
}

.delete:hover {
  opacity: 1;
}

.number {
  grid-area: Eyes;
}

/*
dice - checkboxes
*/

.box {
  display: none;
}

.boxLabel {
  width: 100%;
  height: 100%;
  border-top: 1px solid rgba(0, 0, 0, 0.5);
  background-color: rgba(0, 0, 0, 0.1);
  cursor: pointer;
}

.advantage {
  grid-area: Left;
}

.disadvantage {
  grid-area: Right;
  border-left: 1px solid #000;
}

.box:checked ~ .boxLabel {
  background-color: #fff;
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
}

/*
control panel
*/

#controlPanel {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  margin-top: 1rem;
  flex-basis: 100%;
}

.numberInput {
  min-width: 70px;
  height: 35px;
  padding: 1rem;
  border-radius: 10px;
}

#controlPanel > * > *:not(:nth-last-child(1)) {
  margin-right: 1rem;
}

/*
control panel - add dice
*/

/*
control panel - modifier
*/

#modPanel p {
  display: inline-block;
  color: #fff;
  font-weight: 700;
}

/*
dice board
*/

#diceBoard {
  display: flex;
  flex-wrap: wrap;
  min-height: 40vh;
  padding: 1rem;
  background-color: #833;
  border-radius: var(--radius);
  border-top: 8px solid #622;
  border-right: 8px solid #411;
  border-bottom: 8px solid #411;
  border-left: 8px solid #511;
  box-shadow: 2px 2px 20px rgba(0, 0, 0, 0.8),
    inset 10px 10px 20px rgba(40, 10, 10, 0.8),
    inset -5px -5px 20px rgba(255, 255, 255, 0.1);
}

.button {
  display: flex;
  justify-content: center;
  gap: 1rem;
}

button {
  border: none;
  border-radius: 2rem;
  padding: 1rem;
  background-color: #fff;
  color: #000;
  font-weight: 700;
  cursor: pointer;
}

button:hover {
  transform: scale(1.1);
}

/*
Protocol
-------------------------------
*/

#protocol {
  max-height: 40vh;
  overflow-y: scroll;
}

.result {
  min-height: 100px;
  padding: 1rem;
  background-color: #fcf2e8;
  border-radius: var(--radius);
  opacity: 0.5;
}

.result:first-child,
.result:hover {
  opacity: 1;
}

.result > :nth-child(n + 2) {
  margin-top: 0.5rem;
}

.bold {
  font-weight: 700;
}

.blue {
  color: rgb(41, 151, 255);
}

.orange {
  color: orange;
}

.green {
  color: rgb(20, 200, 20);
}

.red {
  color: red;
}

/*
tests
-------------------------------
*/
